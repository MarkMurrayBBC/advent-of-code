<mapEmpty, mapGet, mapInsert> = @../../core/core
<equal, test> = @../../tests/test

run = (starting, turns) -> {
  recurse = (starting, lastSpoken, deltas, turn) -> [starting
    | [n, ...starting] -> recurse(starting, n, mapInsert(n, [turn], deltas), turn + 1)
    | [
        | turn == turns -> lastSpoken
        | {
            speak = [mapGet(lastSpoken, deltas) | Just([f, l]) -> l - f | 0]

            newDeltas = [mapGet(speak, deltas)
              | Just([f]) -> mapInsert(speak, [f, turn], deltas)
              | Just([f, l]) -> mapInsert(speak, [l, turn], deltas)
              | mapInsert(speak, [turn], deltas)
            ]

            recurse([], speak, newDeltas, turn + 1)
          }
      ]
  ]

  recurse(starting, -1, mapEmpty, 0)
}

part1 = (input) -> run(input, 2020)

part2 = (input) -> run(input, 30000000)

test("Part 1", {
  equal(part1([0, 3, 6]), 436)
  equal(part1([1, 3, 2]), 1)
  equal(part1([2, 1, 3]), 10)
  equal(part1([1, 2, 3]), 27)
  equal(part1([2, 3, 1]), 78)
  equal(part1([3, 2, 1]), 438)
  equal(part1([3, 1, 2]), 1836)
  equal(part1([5, 2, 8, 16, 18, 0, 1]), 517)
})

test("Part 2", {
  equal(part2([0, 3, 6]), 175594)
  equal(part2([1, 3, 2]), 2578)
  equal(part2([2, 1, 3]), 3544142)
  equal(part2([1, 2, 3]), 261214)
  equal(part2([2, 3, 1]), 6895259)
  equal(part2([3, 2, 1]), 18)
  equal(part2([3, 1, 2]), 362)
  equal(part2([5, 2, 8, 16, 18, 0, 1]), 1047739)
})
